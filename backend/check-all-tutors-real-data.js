const mongoose = require('mongoose');
const TutorProfile = require('./src/models/TutorProfile');
const User = require('./src/models/User');

async function checkAllTutorsRealData() {
  try {
    await mongoose.connect('mongodb+srv://HieuTD:qbTXXCEIn1G4veK5@learnmate.6rejkx4.mongodb.net/?retryWrites=true&w=majority&appName=LearnMate');
    console.log('Connected to MongoDB Atlas');

    // L·∫•y t·∫•t c·∫£ gia s∆∞
    const tutors = await TutorProfile.find({}).populate('user');
    
    console.log(`\nüìä T·ªîNG QUAN: ${tutors.length} gia s∆∞ trong database`);
    console.log('='.repeat(80));

    for (let i = 0; i < tutors.length; i++) {
      const tutor = tutors[i];
      const user = tutor.user;
      
      console.log(`\nüë§ GIA S∆Ø ${i + 1}:`);
      console.log(`Name: ${user?.full_name || 'N/A'}`);
      console.log(`Email: ${user?.email || 'N/A'}`);
      console.log(`Phone: ${user?.phone_number || 'N/A'}`);
      console.log(`Avatar: ${tutor.avatarUrl || user?.image || 'Ch∆∞a c√≥'}`);
      console.log(`City: ${tutor.city || 'Ch∆∞a c√≥'}`);
      console.log(`District: ${tutor.district || 'Ch∆∞a c√≥'}`);
      console.log(`Bio: ${tutor.bio || 'Ch∆∞a c√≥'}`);
      console.log(`Subjects: ${tutor.subjects?.length || 0} m√¥n`);
      console.log(`Experience: ${tutor.experienceYears || 0} nƒÉm`);
      console.log(`Session Rate: ${tutor.sessionRate || 0}ƒë`);
      console.log(`Rating: ${tutor.rating || 0}`);
      console.log(`Status: ${tutor.status || 'N/A'}`);
      console.log(`Teach Modes: ${tutor.teachModes?.join(', ') || 'Ch∆∞a c√≥'}`);
      console.log(`Languages: ${tutor.languages?.join(', ') || 'Ch∆∞a c√≥'}`);
      
      // Ki·ªÉm tra d·ªØ li·ªáu th·ª±c t·∫ø
      const hasRealData = {
        avatar: !!(tutor.avatarUrl || user?.image),
        location: !!(tutor.city || tutor.district),
        bio: !!tutor.bio,
        subjects: !!(tutor.subjects && tutor.subjects.length > 0),
        experience: !!(tutor.experienceYears && tutor.experienceYears > 0),
        price: !!(tutor.sessionRate && tutor.sessionRate > 0),
        rating: !!(tutor.rating && tutor.rating > 0)
      };
      
      console.log(`\nüìã D·ªÆ LI·ªÜU TH·ª∞C T·∫æ:`);
      console.log(`‚úÖ Avatar: ${hasRealData.avatar ? 'C√≥' : '‚ùå Ch∆∞a c√≥'}`);
      console.log(`‚úÖ ƒê·ªãa ch·ªâ: ${hasRealData.location ? 'C√≥' : '‚ùå Ch∆∞a c√≥'}`);
      console.log(`‚úÖ Gi·ªõi thi·ªáu: ${hasRealData.bio ? 'C√≥' : '‚ùå Ch∆∞a c√≥'}`);
      console.log(`‚úÖ M√¥n d·∫°y: ${hasRealData.subjects ? 'C√≥' : '‚ùå Ch∆∞a c√≥'}`);
      console.log(`‚úÖ Kinh nghi·ªám: ${hasRealData.experience ? 'C√≥' : '‚ùå Ch∆∞a c√≥'}`);
      console.log(`‚úÖ H·ªçc ph√≠: ${hasRealData.price ? 'C√≥' : '‚ùå Ch∆∞a c√≥'}`);
      console.log(`‚úÖ ƒê√°nh gi√°: ${hasRealData.rating ? 'C√≥' : '‚ùå Ch∆∞a c√≥'}`);
      
      const realDataCount = Object.values(hasRealData).filter(Boolean).length;
      console.log(`üìä T·ªïng d·ªØ li·ªáu th·ª±c: ${realDataCount}/7`);
      
      if (realDataCount === 0) {
        console.log('‚ö†Ô∏è  GIA S∆Ø N√ÄY CH∆ØA C√ì D·ªÆ LI·ªÜU TH·ª∞C T·∫æ!');
      } else if (realDataCount < 4) {
        console.log('‚ö†Ô∏è  GIA S∆Ø N√ÄY C√ì √çT D·ªÆ LI·ªÜU TH·ª∞C T·∫æ!');
      } else {
        console.log('‚úÖ GIA S∆Ø N√ÄY C√ì ƒê·∫¶Y ƒê·ª¶ D·ªÆ LI·ªÜU TH·ª∞C T·∫æ!');
      }
      
      console.log('-'.repeat(80));
    }

    // Th·ªëng k√™ t·ªïng quan
    const stats = {
      total: tutors.length,
      withAvatar: tutors.filter(t => t.avatarUrl || t.user?.image).length,
      withLocation: tutors.filter(t => t.city || t.district).length,
      withBio: tutors.filter(t => t.bio).length,
      withSubjects: tutors.filter(t => t.subjects && t.subjects.length > 0).length,
      withExperience: tutors.filter(t => t.experienceYears && t.experienceYears > 0).length,
      withPrice: tutors.filter(t => t.sessionRate && t.sessionRate > 0).length,
      withRating: tutors.filter(t => t.rating && t.rating > 0).length
    };

    console.log('\nüìä TH·ªêNG K√ä T·ªîNG QUAN:');
    console.log(`T·ªïng gia s∆∞: ${stats.total}`);
    console.log(`C√≥ avatar: ${stats.withAvatar}/${stats.total} (${Math.round(stats.withAvatar/stats.total*100)}%)`);
    console.log(`C√≥ ƒë·ªãa ch·ªâ: ${stats.withLocation}/${stats.total} (${Math.round(stats.withLocation/stats.total*100)}%)`);
    console.log(`C√≥ gi·ªõi thi·ªáu: ${stats.withBio}/${stats.total} (${Math.round(stats.withBio/stats.total*100)}%)`);
    console.log(`C√≥ m√¥n d·∫°y: ${stats.withSubjects}/${stats.total} (${Math.round(stats.withSubjects/stats.total*100)}%)`);
    console.log(`C√≥ kinh nghi·ªám: ${stats.withExperience}/${stats.total} (${Math.round(stats.withExperience/stats.total*100)}%)`);
    console.log(`C√≥ h·ªçc ph√≠: ${stats.withPrice}/${stats.total} (${Math.round(stats.withPrice/stats.total*100)}%)`);
    console.log(`C√≥ ƒë√°nh gi√°: ${stats.withRating}/${stats.total} (${Math.round(stats.withRating/stats.total*100)}%)`);

    await mongoose.disconnect();
    console.log('\nüéâ Ho√†n th√†nh ki·ªÉm tra d·ªØ li·ªáu th·ª±c t·∫ø!');
  } catch (error) {
    console.error('Error:', error.message);
  }
}

checkAllTutorsRealData();
