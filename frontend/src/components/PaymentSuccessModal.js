import React, { useState } from 'react';
import { processPaymentSuccess } from '../services/BookingService';
import './PaymentSuccessModal.scss';

const PaymentSuccessModal = ({ isOpen, onClose, bookingId, bookingData }) => {
  const [isProcessing, setIsProcessing] = useState(false);
  const [roomCode, setRoomCode] = useState(null);
  const [roomUrl, setRoomUrl] = useState(null);

  const handlePaymentSuccess = async () => {
    if (!bookingId) return;
    
    setIsProcessing(true);
    try {
      const result = await processPaymentSuccess(bookingId);
      setRoomCode(result.roomCode);
      setRoomUrl(result.roomUrl);
    } catch (error) {
      console.error('Payment processing failed:', error);
    } finally {
      setIsProcessing(false);
    }
  };

  const handleJoinRoom = () => {
    if (roomUrl) {
      window.open(roomUrl, '_blank');
    }
  };

  const handleCopyCode = () => {
    if (roomCode) {
      navigator.clipboard.writeText(roomCode);
      // You can add a toast notification here
    }
  };

  if (!isOpen) return null;

  return (
    <div className="payment-success-modal-overlay" onClick={onClose}>
      <div className="payment-success-modal" onClick={(e) => e.stopPropagation()}>
        <div className="modal-header">
          <h2>üéâ Thanh to√°n th√†nh c√¥ng!</h2>
          <button className="close-btn" onClick={onClose}>√ó</button>
        </div>
        
        <div className="modal-content">
          {!roomCode ? (
            <div className="payment-section">
              <div className="success-icon">‚úÖ</div>
              <p>B·∫°n ƒë√£ thanh to√°n th√†nh c√¥ng cho kh√≥a h·ªçc n√†y.</p>
              <p>Nh·∫•n n√∫t b√™n d∆∞·ªõi ƒë·ªÉ nh·∫≠n m√£ ph√≤ng h·ªçc v√† th√¥ng b√°o s·∫Ω ƒë∆∞·ª£c g·ª≠i ƒë·∫øn email c·ªßa b·∫°n.</p>
              
              <button 
                className="process-payment-btn"
                onClick={handlePaymentSuccess}
                disabled={isProcessing}
              >
                {isProcessing ? 'ƒêang x·ª≠ l√Ω...' : 'Nh·∫≠n m√£ ph√≤ng h·ªçc'}
              </button>
            </div>
          ) : (
            <div className="room-code-section">
              <div className="success-icon">üéì</div>
              <h3>M√£ ph√≤ng h·ªçc ƒë√£ s·∫µn s√†ng!</h3>
              
              <div className="room-code-display">
                <div className="room-code-label">M√£ ph√≤ng h·ªçc:</div>
                <div className="room-code-value">{roomCode}</div>
                <button className="copy-btn" onClick={handleCopyCode}>
                  üìã Sao ch√©p
                </button>
              </div>
              
              <div className="room-info">
                <p><strong>Th·ªùi gian:</strong> {bookingData?.start ? new Date(bookingData.start).toLocaleString('vi-VN') : 'N/A'}</p>
                <p><strong>Gia s∆∞:</strong> {bookingData?.tutorName || 'N/A'}</p>
                <p><strong>H√¨nh th·ª©c:</strong> {bookingData?.mode === 'online' ? 'Tr·ª±c tuy·∫øn' : 'T·∫°i nh√†'}</p>
              </div>
              
              <div className="action-buttons">
                <button className="join-room-btn" onClick={handleJoinRoom}>
                  üé• Tham gia ph√≤ng h·ªçc ngay
                </button>
                <button className="close-modal-btn" onClick={onClose}>
                  ƒê√≥ng
                </button>
              </div>
              
              <div className="instructions">
                <h4>üìã H∆∞·ªõng d·∫´n tham gia:</h4>
                <ol>
                  <li>Nh·∫•n "Tham gia ph√≤ng h·ªçc ngay" ƒë·ªÉ v√†o ph√≤ng h·ªçc</li>
                  <li>Ho·∫∑c s·ª≠ d·ª•ng n√∫t "Ph√≤ng H·ªçc" tr√™n header v√† nh·∫≠p m√£: <strong>{roomCode}</strong></li>
                  <li>Tham gia ph√≤ng h·ªçc 5 ph√∫t tr∆∞·ªõc gi·ªù b·∫Øt ƒë·∫ßu</li>
                  <li>Chu·∫©n b·ªã camera v√† microphone</li>
                </ol>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default PaymentSuccessModal;
